[alias]
    # list aliases
    aliases = !git config -l | grep alias | cut -c 7-

    # pretty log
    lg = log --graph --pretty=format:'%Cred%h%Creset -%C(yellow)%d%Creset %s %Cgreen(%cr) %C(bold blue)<%an>%Creset' --abbrev-commit
    # even prettier log
    lg2 = log --graph --abbrev-commit --decorate --format=format:'%C(bold blue)%h%C(reset) - %C(bold cyan)%aD%C(reset) %C(bold green)(%ar)%C(reset)%C(bold yellow)%d%C(reset)%n''          %C(white)%s%C(reset) %C(dim white)- %an%C(reset)' --all

    # commit helpers
    cm = commit -m
    cam = commit -a -m
    
    # diff helpers
    d = diff
    ds = diff --stat
    dc = diff --cached

    # branch helpers
    st = status 
    co = checkout
    cob = checkout -b

    cod = checkout develop
    codp = !git checkout develop && git pull --rebase

    com = checkout master
    comp = !git checkout master && git pull --rebase

    cor = checkout release
    corp = !git checkout release && git pull --rebase
    
    # list branches sorted by last modified
    b = "!git for-each-ref --sort='-authordate' --format='%(authordate)%09%(objectname:short)%09%(refname)' refs/heads | sed -e 's-refs/heads/--'"

    # Delete any branches that have been merged into master
    # See: https://coderwall.com/p/up1qma/git-remove-local-branches-not-on-remote
    drypurge = "!git branch -r | awk '{print $1}' | egrep -v -f /dev/fd/0 <(git branch -vv | grep origin) | awk '{print $1}'"
    purge = "!git branch -r | awk '{print $1}' | egrep -v -f /dev/fd/0 <(git branch -vv | grep origin) | awk '{print $1}' | xargs git branch -d"
    purgeforce = "!git branch -r | awk '{print $1}' | egrep -v -f /dev/fd/0 <(git branch -vv | grep origin) | awk '{print $1}' | xargs git branch -D"
